[
  {
    "objectID": "proposal.html",
    "href": "proposal.html",
    "title": "Wan Shi Tong’s Library",
    "section": "",
    "text": "My goal is to create a sleek and accessible website featuring a complex shiny app which allows users to explore trends across the episodes of Avatar: The Last Airbender."
  },
  {
    "objectID": "proposal.html#dataset",
    "href": "proposal.html#dataset",
    "title": "Wan Shi Tong’s Library",
    "section": "Dataset",
    "text": "Dataset\nThis project will utilize the appa package by Avery Robbins. This package includes a dataset containing the transcripts, writers, directors, and IMDB ratings of every episode of the early 2000s animated tv show Avatar: The Last Airbender. The dataframe includes 13,385 rows and 12 variables.\n\n\n\n\n\n\n\nVariable Name\nDescription\n\n\n\n\nid\nan id number for each row, essentially just a row number\n\n\nbook\nthe name of each book, or season, in the series: Water, Earth, and Fire\n\n\nbook_num\nan id number for each book, 1-3\n\n\nchapter\nthe name of each chapter, or episode, in the series\n\n\nchapter_num\nan id number for each chapter\n\n\ncharacter\nevery character who ever spoke in the series\n\n\nfull_text\nthe words spoken by each character + additional scene descriptions\n\n\ncharacter_words\nthe words spoken by each character\n\n\nscene_description\nthe descriptions of what is happening on screen\n\n\nwriter\nthe writer, or writers, for each episode\n\n\ndirector\nthe director for each episode\n\n\nimdb_rating\nimdb ratings on a scale of 1 to 10"
  },
  {
    "objectID": "proposal.html#reason-for-choosing-this-dataset",
    "href": "proposal.html#reason-for-choosing-this-dataset",
    "title": "Wan Shi Tong’s Library",
    "section": "Reason for Choosing this Dataset",
    "text": "Reason for Choosing this Dataset\nFrom the beginning, I knew I wanted to explore something pop culture related that would also lend itself to performing text analysis. However, my primary motivation for choosing this dataset is somewhat personal. As a child, Avatar was one of my favorite shows and I have very fond childhood memories of watching it. As such, the show holds a very special place in my heart and I thought that being able to explore it in a new way would be fun and provide me with some new information regarding the show. Additionally, this dataset is quite a fun one and differs from most datasets that I have used in the past."
  },
  {
    "objectID": "proposal.html#questions-and-analysis-plan",
    "href": "proposal.html#questions-and-analysis-plan",
    "title": "Wan Shi Tong’s Library",
    "section": "Questions and Analysis Plan",
    "text": "Questions and Analysis Plan\n\nQuestions\n\nHow are lines distributed across episodes?\n\nHow does it differ by character?\nHow does it differ by season?\nHow does it differ by director?\nHow does it differ by character gender?\n\nHow doe IMDB scores change over the course of the show?\n\nWhat is the IMDB score average per season?\n\n\n\n\nProject Repo Organization\n\nThis project repo will have 6 main files that will contain the majority of my work. Each file with the excpetion of the yml will corespond to a page on my website and address a differnt part of the project.\n\n_quarto.yml (Website yml)\nindex.qmd (Project Write Up)\nproposal.qmd (Project Proposal)\npresentation.qmd (Project Presentation)\nshiny_app.qmd (Shiny App)\nabout.qmd (About)\n\nIn addition to the 6 main files, the repo will also contain a folder called EXTRA. Within EXTRA will be two additional folders.\n\ndata\n\ndata_cleanup.r (Code to clean up data and create cleaned data files)\natla.rda (Cleaned Up Data rda)\natla.csv (Cleaned Up Data csv)\n\nshinyapp\n\napp.r (Shiny App Creation Code)\n\n\nWithin the repo, another folder called images will also be used to store any images used on the site.\nThe repo will also contain other necessary files for creating a website using quarto but these will remain untouched.\n\n\n\nPlan of Attack - Weekly Plan\n\nWeek 1\n\ncreate all necessary files (shiny app folder, data clean up folder, and additional qmd file)\nsubmit project proposal (April 4th)\n\nWeek 2\n\npeer review proposal (April 8th)\namend proposal following peer reveiew\nclean up dataset\ncomplete shiny app creation\nimplement shiny app into quarto file\n\nWeek 3\n\npeer review code (April 15th)\namend code following peer reveiew\ncreate presentation of project\n\nWeek 4\n\npresent project ( April 25th/27th)\namend project following presentation feedback\n\nWeek 5\n\nbegin project write up\n\nWeek 6\n\ncomplete project write up\nsubmit project write up (May 9th)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Avatar: The Last Airbender Project",
    "section": "",
    "text": "This project was developed by Morgen Kaufman. For MATH/STAT241 at Reed College."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Wan Shi Tong’s Library",
    "section": "",
    "text": "In this project, I sought to answer a number of questions regarding the 2000s children’s TV show Avatar: The Last Airbender. How are lines distributed across episodes? How does it differ by character? How does it differ by season? How does it differ by director? How do IMDB scores change over the course of the show? What is the IMDB score average per season? To answer these questions, I used theappa package byAvery Robbins. The purpose of this package is to “provide an easy way to share Avatar: The Last Airbender transcript data.” The package includes a dataset containing the transcripts, writers, directors, and IMDB ratings of every episode of the show. The data is organized by lines of the script with each row corresponding to one line (either spoken by a character or scene descriptions). The show consists of 61 episodes and 3 books (seasons). The data frame includes 13,385 rows and 12 variables. The included variables are as follows: \n\n\n\n\n\n\n\nVariable Name\nDescription\n\n\n\n\nid\nan id number for each row, essentially just a row number\n\n\nbook\nthe name of each book, or season, in the series: Water, Earth, and Fire\n\n\nbook_num\nan id number for each book, 1-3\n\n\nchapter\nthe name of each chapter, or episode, in the series\n\n\nchapter_num\nan id number for each chapter\n\n\ncharacter\nevery character who ever spoke in the series\n\n\nfull_text\nthe words spoken by each character + additional scene descriptions\n\n\ncharacter_words\nthe words spoken by each character\n\n\nscene_description\nthe descriptions of what is happening on screen\n\n\nwriter\nthe writer, or writers, for each episode\n\n\ndirector\nthe director for each episode\n\n\nimdb_rating\nimdb ratings on a scale of 1 to 10\n\n\n\nHowever, for this project, I used a new dataset created by wrangling the appa data.\nTo do this I first did some data wrangling which removed scene descriptions and split lines spoken by multiple characters. Then a new column called “episode” was created which assigns each episode across all seasons a corresponding number 1-61 (in the original set the numbers reset for each season). Next, the data was grouped by character and episode to calculate another column called “lines” which calculates the sum of rows for each character in each episode, this allows for us to now have a numeric variable for the number of lines spoken by a character. This new, modified dataset is called “atla” and will be the primary dataset for this project. The newly created atla data frame includes 10010 observations and 13 variables."
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "Wan Shi Tong’s Library",
    "section": "",
    "text": "In this project, I sought to answer a number of questions regarding the 2000s children’s TV show Avatar: The Last Airbender. How are lines distributed across episodes? How does it differ by character? How does it differ by season? How does it differ by director? How do IMDB scores change over the course of the show? What is the IMDB score average per season? To answer these questions, I used theappa package byAvery Robbins. The purpose of this package is to “provide an easy way to share Avatar: The Last Airbender transcript data.” The package includes a dataset containing the transcripts, writers, directors, and IMDB ratings of every episode of the show. The data is organized by lines of the script with each row corresponding to one line (either spoken by a character or scene descriptions). The show consists of 61 episodes and 3 books (seasons). The data frame includes 13,385 rows and 12 variables. The included variables are as follows: \n\n\n\n\n\n\n\nVariable Name\nDescription\n\n\n\n\nid\nan id number for each row, essentially just a row number\n\n\nbook\nthe name of each book, or season, in the series: Water, Earth, and Fire\n\n\nbook_num\nan id number for each book, 1-3\n\n\nchapter\nthe name of each chapter, or episode, in the series\n\n\nchapter_num\nan id number for each chapter\n\n\ncharacter\nevery character who ever spoke in the series\n\n\nfull_text\nthe words spoken by each character + additional scene descriptions\n\n\ncharacter_words\nthe words spoken by each character\n\n\nscene_description\nthe descriptions of what is happening on screen\n\n\nwriter\nthe writer, or writers, for each episode\n\n\ndirector\nthe director for each episode\n\n\nimdb_rating\nimdb ratings on a scale of 1 to 10\n\n\n\nHowever, for this project, I used a new dataset created by wrangling the appa data.\nTo do this I first did some data wrangling which removed scene descriptions and split lines spoken by multiple characters. Then a new column called “episode” was created which assigns each episode across all seasons a corresponding number 1-61 (in the original set the numbers reset for each season). Next, the data was grouped by character and episode to calculate another column called “lines” which calculates the sum of rows for each character in each episode, this allows for us to now have a numeric variable for the number of lines spoken by a character. This new, modified dataset is called “atla” and will be the primary dataset for this project. The newly created atla data frame includes 10010 observations and 13 variables."
  },
  {
    "objectID": "proposal.html#goals",
    "href": "proposal.html#goals",
    "title": "Wan Shi Tong’s Library",
    "section": "",
    "text": "My goal is to create a sleek and accessible website featuring a complex shiny app which allows users to explore trends across the episodes of Avatar: The Last Airbender."
  },
  {
    "objectID": "index.html#approach",
    "href": "index.html#approach",
    "title": "Wan Shi Tong’s Library",
    "section": "Approach",
    "text": "Approach\nTo answer these questions, I created two shiny apps that allow users to explore the dataset. Additionally, I have also generated some summary statistics that allow for easy exploration of the data. The first shiny app is an interactive scatter and line plot that allows for filtering by characters, directors, and seasons. Along the x-axis is the episode number (1-61) and the y-axis is the line count. The same kind of app was created for IMDB exploration with the IMDB score on the y-axis and the character filter removed. The apps were made to allow users to explore a wide range of available data. The plots were created using a combination of ggplot and plotly to allow for interactive line tracing and point highlighting as well as zoom features."
  },
  {
    "objectID": "index.html#analysis",
    "href": "index.html#analysis",
    "title": "Wan Shi Tong’s Library",
    "section": "Analysis",
    "text": "Analysis"
  },
  {
    "objectID": "index.html#discussion",
    "href": "index.html#discussion",
    "title": "Wan Shi Tong’s Library",
    "section": "Discussion",
    "text": "Discussion\nFrom these summary statistics and the accompanying apps, we can draw a number of conclusions. Because the purpose of the apps was to allow for maximum customization, it would be too time-consuming to discuss all observations we can gather. As such the following conclusions are not the only things we can gather and more specific explorations (ie a specific character or director) may yield more in-depth information. \nTo begin with I would like to discuss the information we can gather from the line-focused portion of this project. Using the line-centered data, we can see that as the show progressed, the number of lines per season dropped although only marginally there is a slight downward trend. This trend however is not strong enough to make any concrete conclusions. We can also see that towards the very end of a season, the number of total lines seems to drop quite drastically. Although this would need further investigation My hypothesis for this is that the season finale episodes may be more action-heavy and thus rely less on dialogue. Additionally, it may be that the number of lines decreases but length of lines increased (ie characters have long monologues). In the case of the main characters (Aang, Sokka, and Katara) there is a general trend of the number of lines for the character to spike in the middle / later end of a season with a drop towards the very end of the season. Given the previous observation regarding total lines, it can also be deduced that the main characters tend to make up the majority of the line count. The exception to this is the character Jet who only makes an appearance in a few episodes but maintains the most number of lines in a single episode (this being episode 10 with 74 lines). The following Jet however, is Aang (the main character) with 73 lines in episode 14. Additionally, the number of lines for characters fluctuates from episode to episode with no clear observable trend. By looking at some characters such as Azula, Toph, and Zuko, we can pinpoint key episodes in which the character likely played a large role by looking at the line trend. We can also see that the director did not have any clear impact on the number of lines any given character had in an episode. As such we may wish to explore the episode writers to see if that variable has an impact on the observations.\nAs for IMDB ratings, we can see in the season breakdown of IMDB scores, that the lowest rating the show ever got was 7.1, with some of the highest ratings reaching almost a full 10 (perfect score). Additionally, the director did not seem to have any direct correlation to the IMDB rating. IMDB ratings also overall have a slight upward trend. IMDB ratings also seem to be possibly influenced by the episode’s position in the season with episodes that are placed towards the end of a season having higher ratings than those towards the start.\nThe main limitation of this project is that there is no marking made for character and director gender identity. Initially, this was something that I wished to explore as well but due to the time commitment of having to manually create a new variable, I was unable to accomplish this task. Additionally, I also had wanted to explore characters per line/line length but this was again a time issue."
  },
  {
    "objectID": "shiny_app.html",
    "href": "shiny_app.html",
    "title": "Wan Shi Tong’s Library",
    "section": "",
    "text": "click for link!"
  },
  {
    "objectID": "shiny_app.html#goals",
    "href": "shiny_app.html#goals",
    "title": "Avatar: The Last Airbender Project",
    "section": "",
    "text": "My goal is to create a sleek and accessible website featuring a complex shiny app which allows users to explore line trends across the episodes of Avatar: The Last Airbender."
  },
  {
    "objectID": "shiny_app.html#dataset",
    "href": "shiny_app.html#dataset",
    "title": "Avatar: The Last Airbender Project",
    "section": "Dataset",
    "text": "Dataset\nThis project will utilize the appa package by Avery Robbins. This package includes a dataset containing the transcripts, writers, directors, and IMDB ratings of every episode of the early 2000s animated tv show Avatar: The Last Airbender. The dataframe includes 13,385 rows and 12 variables.\n\n\n\n\n\n\n\nVariable Name\nDescription\n\n\n\n\nid\nan id number for each row, essentially just a row number\n\n\nbook\nthe name of each book, or season, in the series: Water, Earth, and Fire\n\n\nbook_num\nan id number for each book, 1-3\n\n\nchapter\nthe name of each chapter, or episode, in the series\n\n\nchapter_num\nan id number for each chapter\n\n\ncharacter\nevery character who ever spoke in the series\n\n\nfull_text\nthe words spoken by each character + additional scene descriptions\n\n\ncharacter_words\nthe words spoken by each character\n\n\nscene_description\nthe descriptions of what is happening on screen\n\n\nwriter\nthe writer, or writers, for each episode\n\n\ndirector\nthe director for each episode\n\n\nimdb_rating\nimdb ratings on a scale of 1 to 10"
  },
  {
    "objectID": "shiny_app.html#reason-for-choosing-this-dataset",
    "href": "shiny_app.html#reason-for-choosing-this-dataset",
    "title": "Avatar: The Last Airbender Project",
    "section": "Reason for Choosing this Dataset",
    "text": "Reason for Choosing this Dataset"
  },
  {
    "objectID": "shiny_app.html#questions-and-analysis-plan",
    "href": "shiny_app.html#questions-and-analysis-plan",
    "title": "Avatar: The Last Airbender Project",
    "section": "Questions and Analysis Plan",
    "text": "Questions and Analysis Plan\n\nHow are lines distrubuted across episodes\n\nA one to two paragraph description of your goals, including your motivation. Depending on the focus of your project, the following might go in here.\n\n\n\nIf using particular dataset(s), a brief description of each dataset including the reason why you chose the particular dataset, its dataset, its dimensions and any other relevant metadata. (Make sure to load the data and use inline code for some of this information.)\nIf answering a particular research question, the question itself and the reason why you chose this question.\n\nA weekly “plan of attack” outlining your steps to complete your project and including the team member(s) assigned to that task.\nThe final organization of your project repository. This means describing the project organization in your proposal as well as implementing that organization in your repo. Create any folders needed and place a README.md in each folder explaining what goes in there."
  },
  {
    "objectID": "presentation.html#section",
    "href": "presentation.html#section",
    "title": "Wan Shi Tong’s Library",
    "section": "",
    "text": "http://127.0.0.1:7316"
  },
  {
    "objectID": "presentation.html#intoduction",
    "href": "presentation.html#intoduction",
    "title": "Wan Shi Tong’s Library",
    "section": "",
    "text": "This project will utilize the appa package by Avery Robbins\nThis package includes a dataset containing the script, writers, directors, and IMDB ratings of every episode of the early 2000s animated TV show Avatar: The Last Airbender\nThe dataframe includes 13,385 rows and 12 variables\nThe data is organized by lines of the script with each row corresponding to one line (either spoken by a character or scene descriptions)\nThe show consists of 61 episodes and 3 books (seasons)"
  },
  {
    "objectID": "presentation.html#questions",
    "href": "presentation.html#questions",
    "title": "Wan Shi Tong’s Library",
    "section": "Questions",
    "text": "Questions\n\nHow are lines distributed across episodes?\n\nHow does it differ by character?\nHow does it differ by season?\nHow does it differ by director?\n\nHow doe IMDB scores change over the course of the show?\n\nWhat is the IMDB score average per season?"
  },
  {
    "objectID": "presentation.html#approach",
    "href": "presentation.html#approach",
    "title": "Wan Shi Tong’s Library",
    "section": "Approach",
    "text": "Approach\nTo answer these questions, I created two shiny apps that allow users to explore the dataset. Additionally I have generated some summary statistics that allow for easy exploration of the data. To do this I first did some data wrangling which removed scene descriptions and split lines spoken by multiple characters. Then a new column called “episode” was created which assigns each episode across all seasons a corresponding number 1-61 (in the original set the numbers reset for each season). Next the data was grouped by character and episode to calculate another column called “lines” which calculates the sum of rows for each character in each episode, this allows for us to now have a numeric variable for the number of lines spoken by character. This data was then imported into a shiny app which is an interactive scatter and line plot that allows for filtering by characters, directors, and seasons. Along the x axis is the episode number (1-61) and the y axis is the line count. The same kind of app was created for IMDB exploration with IMDB score on the y axis and the character filter removed. The apps were made to allow for users to explore a wide range of available data. The plots were created using a combination of ggplot and plotly to allow for interactive line tracing and point highlighting as well as zoom features."
  },
  {
    "objectID": "presentation.html#shiny-app",
    "href": "presentation.html#shiny-app",
    "title": "Wan Shi Tong’s Library",
    "section": "Shiny App",
    "text": "Shiny App\n\nApp 1 - Character LinesApp 2 - IMDB"
  },
  {
    "objectID": "presentation.html#conclusions",
    "href": "presentation.html#conclusions",
    "title": "Wan Shi Tong’s Library",
    "section": "Conclusions",
    "text": "Conclusions\n\nAs the show progressed, the number of lines per season dropped although only marginally there is a slight downward trend.\n\n\n\nIn the case of the main characters (Aang, Sokka, and Katara) there is a general trend of the number of lines for the character to spike in the middle / later end of a season with a drop towards the very end of the season. S Additionally the number of lines fluctuates from episode to episode with no clear observable trend.\n\n\n\nThrough looking at some characters such as Azula, Toph, and Zuko, we can pinpoint key episodes in which the character likely played a large role by looking at the line trend.\n\n\n\nCritics love ATLA. As we can see by the season breakdown of IMDB scores, the lowest rating the show ever got was a 7.1, with some of the highest ratings reaching almost a full 10 (perfect score). Additionally the director did not seem to have any direct correlation to the IMDB rating."
  },
  {
    "objectID": "presentation.html#limitations",
    "href": "presentation.html#limitations",
    "title": "Wan Shi Tong’s Library",
    "section": "Limitations",
    "text": "Limitations\nthe main limitation of this project is that there is no marking made for character and director gender identity. Initially this was something that I wished to explore as well but due to the time commitment of having to manually create a new variable I was unable to accomplish this task. Additionally, I also had wanted to explore characters per line / line length but this was again a time issue."
  },
  {
    "objectID": "presentation.html#shiny-apps",
    "href": "presentation.html#shiny-apps",
    "title": "Wan Shi Tong’s Library",
    "section": "Shiny Apps",
    "text": "Shiny Apps\n\nApp 1 - Character LinesApp 2 - IMDB"
  },
  {
    "objectID": "presentation.html#viz",
    "href": "presentation.html#viz",
    "title": "Wan Shi Tong’s Library",
    "section": "Viz",
    "text": "Viz\n\nApp 1 - Character LinesApp 2 - IMDB\n\n\n\n\n\n\n\n\n\n| mean | median | min | max |  sd  | episodes |        director         |\n|:----:|:------:|:---:|:---:|:----:|:--------:|:-----------------------:|\n| 8.62 |  8.6   | 7.1 | 9.8 | 0.57 |    61    |           All           |\n| 8.09 |  8.0   | 8.0 | 8.2 | 0.10 |    2     |      Anthony Lioi       |\n| 8.09 |  8.0   | 7.8 | 9.1 | 0.33 |    8     |       Dave Filoni       |\n| 8.72 |  8.6   | 7.8 | 9.5 | 0.50 |    12    |     Ethan Spaulding     |\n| 8.60 |  8.7   | 7.1 | 9.5 | 0.57 |    19    |     Giancarlo Volpe     |\n| 8.96 |  8.9   | 8.4 | 9.8 | 0.47 |    8     |   Joaquim Dos Santos    |\n| 8.68 |  8.7   | 7.5 | 9.5 | 0.54 |    11    |    Lauren MacMullan     |\n| 9.60 |  9.6   | 9.6 | 9.6 | 0.00 |    1     | Michael Dante DiMartino |"
  },
  {
    "objectID": "presentation.html#summary-statistics",
    "href": "presentation.html#summary-statistics",
    "title": "Wan Shi Tong’s Library",
    "section": "Summary Statistics",
    "text": "Summary Statistics\n\nLine StatsLine Stats (cont.)IMDB Satistics\n\n\n\n\n\n\n   Mean      Median    Min    Max       SD    \n----------  --------  -----  -----  ----------\n 164.0984     168      65     248    34.62884 \n\n\nMost Lines by one character in one episode: Jet - 74 (ep 10)\nSeason line breakdown:\n\nBook 1 - Water : 3,501\nBook 2 - Earth : 3,322\nBook 3 - Fire : 3,187\n\n\n\n\n\n\n\n\nTop episodes are ep 14 (248 lines) and ep 10 (242 lines)\n\n\n\n\n\n\n Mean    Median    Min    Max     SD     Episodes           Director         \n------  --------  -----  -----  ------  ----------  -------------------------\n 8.62     8.6      7.1    9.8    0.57       61                 All           \n 8.09     8.0      8.0    8.2    0.10       2             Anthony Lioi       \n 8.09     8.0      7.8    9.1    0.33       8              Dave Filoni       \n 8.72     8.6      7.8    9.5    0.50       12           Ethan Spaulding     \n 8.60     8.7      7.1    9.5    0.57       19           Giancarlo Volpe     \n 8.96     8.9      8.4    9.8    0.47       8          Joaquim Dos Santos    \n 8.68     8.7      7.5    9.5    0.54       11          Lauren MacMullan     \n 9.60     9.6      9.6    9.6    0.00       1        Michael Dante DiMartino"
  },
  {
    "objectID": "presentation.html#summary-statistics---lines",
    "href": "presentation.html#summary-statistics---lines",
    "title": "Wan Shi Tong’s Library",
    "section": "Summary Statistics - Lines",
    "text": "Summary Statistics - Lines\n\nLine StatsLine Stats (cont.)\n\n\n\n\n\n\n   Mean      Median    Min    Max       SD    \n----------  --------  -----  -----  ----------\n 164.0984     168      65     248    34.62884 \n\n\nTop episodes are ep 14 (248 lines) and ep 10 (242 lines)\nSeason line breakdown:\n\nBook 1 - Water : 3,501\nBook 2 - Earth : 3,322\nBook 3 - Fire : 3,187"
  },
  {
    "objectID": "presentation.html#imdb-satistics",
    "href": "presentation.html#imdb-satistics",
    "title": "Wan Shi Tong’s Library",
    "section": "IMDB Satistics",
    "text": "IMDB Satistics\n\nDirector IMDBSeason IMDB\n\n\n\n\n\n\n Mean    Median    Min    Max     SD     Episodes           Director         \n------  --------  -----  -----  ------  ----------  -------------------------\n 8.62     8.6      7.1    9.8    0.57       61                 All           \n 8.09     8.0      8.0    8.2    0.10       2             Anthony Lioi       \n 8.09     8.0      7.8    9.1    0.33       8              Dave Filoni       \n 8.72     8.6      7.8    9.5    0.50       12           Ethan Spaulding     \n 8.60     8.7      7.1    9.5    0.57       19           Giancarlo Volpe     \n 8.96     8.9      8.4    9.8    0.47       8          Joaquim Dos Santos    \n 8.68     8.7      7.5    9.5    0.54       11          Lauren MacMullan     \n 9.60     9.6      9.6    9.6    0.00       1        Michael Dante DiMartino \n\n\n\n\n\n\n\n\n Book     Book #    Mean    Median    Min    Max     SD     Episodes \n-------  --------  ------  --------  -----  -----  ------  ----------\n Water      1       8.27     8.2      7.1    9.4    0.51       20    \n Earth      2       8.73     8.8      7.5    9.6    0.51       20    \n Fire       3       8.85     8.9      7.8    9.8    0.51       21"
  },
  {
    "objectID": "shiny_app.html#shiny-app-dashboard",
    "href": "shiny_app.html#shiny-app-dashboard",
    "title": "Wan Shi Tong’s Library",
    "section": "",
    "text": "click for link!"
  },
  {
    "objectID": "index.html#apps-and-visualizations",
    "href": "index.html#apps-and-visualizations",
    "title": "Wan Shi Tong’s Library",
    "section": "Apps and Visualizations",
    "text": "Apps and Visualizations\n\nApps\nApps can be found here!\n\n\n\n\n\n\n\nLine Summary Statistics\n\nNumber of Lines\n\n\n\n\n   Mean      Median    Min    Max       SD    \n----------  --------  -----  -----  ----------\n 164.0984     168      65     248    34.62884 \n\n\n\n\nSeason line breakdown\n\nBook 1 - Water : 3,501\nBook 2 - Earth : 3,322\nBook 3 - Fire : 3,187\n\nTop episodes are ep 14 (248 lines) and ep 10 (242 lines)\n\n\nAggregate Line Visualization\n\n\n\n\n\n\n\n\n\n\n\n\nIMDB Summary Statistics\n\nDirector IMDB\n\n\n\n\n Mean    Median    Min    Max     SD     Episodes           Director         \n------  --------  -----  -----  ------  ----------  -------------------------\n 8.62     8.6      7.1    9.8    0.57       61                 All           \n 8.09     8.0      8.0    8.2    0.10       2             Anthony Lioi       \n 8.09     8.0      7.8    9.1    0.33       8              Dave Filoni       \n 8.72     8.6      7.8    9.5    0.50       12           Ethan Spaulding     \n 8.60     8.7      7.1    9.5    0.57       19           Giancarlo Volpe     \n 8.96     8.9      8.4    9.8    0.47       8          Joaquim Dos Santos    \n 8.68     8.7      7.5    9.5    0.54       11          Lauren MacMullan     \n 9.60     9.6      9.6    9.6    0.00       1        Michael Dante DiMartino \n\n\n\n\nSeason IMDB\n\n\n\n\n Book     Book #    Mean    Median    Min    Max     SD     Episodes \n-------  --------  ------  --------  -----  -----  ------  ----------\n Water      1       8.27     8.2      7.1    9.4    0.51       20    \n Earth      2       8.73     8.8      7.5    9.6    0.51       20    \n Fire       3       8.85     8.9      7.8    9.8    0.51       21"
  },
  {
    "objectID": "index.html#code",
    "href": "index.html#code",
    "title": "Wan Shi Tong’s Library",
    "section": "Code",
    "text": "Code\nData Wrangling\n\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(stringr)\nappa &lt;- appa::appa\n\ncharacter_count &lt;- appa %&gt;%\n  group_by(chapter, character) %&gt;%\n  mutate(character = str_split(character, \" and \")) %&gt;%\n  unnest(character) %&gt;%\n  summarise(Lines = n(), id, Book = book, book_num, chapter, chapter_num, writer, director, imdb_rating) %&gt;%\n  filter(character != \"Scene Description\")  \n\neps &lt;- appa %&gt;%\n  group_by(chapter) %&gt;%\n  summarise() %&gt;%\n  mutate(Episode = row_number())\n\natla &lt;- left_join(character_count, eps, by = \"chapter\") %&gt;%\n  group_by(character) %&gt;%\n  mutate(sum(Lines)) %&gt;%\n  mutate(\"IMDB\" = imdb_rating) %&gt;%\n  arrange(desc(Lines))\n \nwrite_csv(atla, \"~/Desktop/Data/project-02-morgenk/EXTRA/data/atla.csv\")\nwrite_csv(atla, \"~/Desktop/Data/project-02-morgenk/EXTRA/shinyapp/atla.csv\")\n\nSummary Statistics\n\nall_episode_counts &lt;- atla %&gt;%\n  group_by(Episode, character) %&gt;%\n  summarise(count = n())\n\nall_episode_counts &lt;- all_episode_counts %&gt;%\n  group_by(Episode) %&gt;%\n  summarise(total = sum(count)) %&gt;%\n  arrange(desc(total))\n\n\nall_book_counts &lt;- atla %&gt;%\n  group_by(book_num, character) %&gt;%\n  summarise(count = n())\n\nall_book_counts &lt;- all_book_counts %&gt;%\n  group_by(book_num) %&gt;%\n  summarise(total = sum(count)) %&gt;%\n  arrange(desc(total))\n\nall_sum &lt;- all_episode_counts %&gt;%\n  summarise(\n    Mean = mean(total),\n    Median = median(total),\n    Min = min(total),\n    Max = max(total),\n    SD = sd(total))\n\nprint(kable(all_sum, align = \"c\", \"simple\"))\n\n\n\nall_episode_counts %&gt;% \n  ggplot(aes(x = Episode, y = total)) +\n  geom_point(color = \"blue\", size = 2) +\n  geom_line(color = \"darkblue\") +\n  geom_smooth() + \n  labs(x = \"Episode\",\n       y = \"Total Lines\",\n       title = \"Total Lines per Episode\") +\n  scale_x_continuous(breaks = seq(0, 61, by = 5)) +\n  theme_minimal() \n\nsummary_stats &lt;- atla %&gt;%\n  summarise(\n    Mean = mean(IMDB, na.rm = TRUE),\n    Median = median(IMDB, na.rm = TRUE),\n    Min = min(IMDB, na.rm = TRUE),\n    Max = max(IMDB, na.rm = TRUE),\n    SD = sd(IMDB, na.rm = TRUE),\n    Episodes = n_distinct(Episode)\n  ) %&gt;%\n  mutate(director = \"All\")\n\nsummary_stats2 &lt;- atla %&gt;%\n  group_by(director) %&gt;%\n  summarise(\n    Mean = mean(IMDB, na.rm = TRUE),\n    Median = median(IMDB, na.rm = TRUE),\n    Min = min(IMDB, na.rm = TRUE),\n    Max = max(IMDB, na.rm = TRUE),\n    SD = sd(IMDB, na.rm = TRUE),\n    Episodes = n_distinct(Episode)\n  )\n\nstats_all &lt;- bind_rows(summary_stats, summary_stats2)\n\nstats_all_round &lt;- stats_all %&gt;%\n  mutate(\n    Mean = round(Mean, digits = 2),\n    SD = round(SD, digits = 2)) %&gt;%\n  rename(Director = director)\n\n\nprint(kable(stats_all_round, align = \"c\", \"simple\"))\n\n\nsummary_stats3 &lt;- atla %&gt;%\n  group_by(Book, book_num) %&gt;%\n  summarise(\n    Mean = mean(IMDB, na.rm = TRUE),\n    Median = median(IMDB, na.rm = TRUE),\n    Min = min(IMDB, na.rm = TRUE),\n    Max = max(IMDB, na.rm = TRUE),\n    SD = sd(IMDB, na.rm = TRUE),\n    Episodes = n_distinct(Episode)\n  ) %&gt;%\n  arrange(book_num)\n\nbook_stats &lt;- summary_stats3 %&gt;%\n  mutate(\n    Mean = round(Mean, digits = 2),\n    SD = round(SD, digits = 2) )%&gt;%\n  rename(\"Book #\" = book_num)\n\n\nprint(kable(book_stats, align = \"c\", \"simple\"))\n\nShiny App Code\n\nlibrary(shiny)\nlibrary(shinydashboard)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(plotly)\nlibrary(readr)\nlibrary(RColorBrewer)\nlibrary(tidyverse)\nlibrary(stringr)\n\natla &lt;- read_csv(\"atla.csv\")\n\n\nui &lt;- dashboardPage(\n  dashboardHeader(title = \"Wan Shi Tong's Library\"),\n  dashboardSidebar(\n    sidebarMenu(\n      menuItem(\"Character Line Analysis\", tabName = \"character_analysis\", icon = icon(\"heart\")),\n      menuItem(\"IMDB Analysis\", tabName = \"imdb_analysis\", icon = icon(\"heart\"))\n    )\n  ),\n  dashboardBody(\n    tabItems(\n      tabItem(tabName = \"character_analysis\",\n              fluidPage(\n                titlePanel(\"Character Line Analysis\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    selectInput(\"character_char\", \"Select Character(s)\", choices = as.vector(unique(atla$character)),  multiple = TRUE, selected = \"Aang\"),\n                    selectInput(\"director_char\", \"Select Director\", choices = c(\"All Directors\", unique(atla$director)), multiple = TRUE, selected = \"All Directors\"),\n                    submitButton(\"Update Results!\")\n                  ),\n                  mainPanel(\n                    plotlyOutput(\"plot_char\")\n                  )\n                )\n              )\n      ),\n      tabItem(tabName = \"imdb_analysis\",\n              fluidPage(\n                titlePanel(\"IMDB Analysis\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    selectInput(\"director_imdb\", \"Select Director\", choices = c(\"All Directors\", unique(atla$director)), multiple = TRUE, selected = \"All Directors\"),\n                    submitButton(\"Update Results!\")\n                  ),\n                  mainPanel(\n                    plotlyOutput(\"plot_imdb\")\n                  )\n                )\n              )\n      ),\n  \n      tabItem(tabName = \"Credits\",\n              fluidPage(\n                titlePanel(\"Credits and Copyright Information\"),\n                mainPanel(\n                  h3(\"Copyright Information\"),\n                  p(\"test\")\n                )\n              )\n    \n      )\n    )\n  ),\n  skin = \"purple\" \n)\n\n\nserver &lt;- function(input, output, session) {\n  \n  book_colors &lt;- c(\"Water\" = \"#1f77b4\", \n                   \"Earth\" = \"#2ca02c\", \n                   \"Fire\" = \"#ad0000\") \n  \n  palette_name &lt;- \"Set1\"\n  character_palette &lt;- brewer.pal(n = 10, name = palette_name)\n  \n  plot_data_char &lt;- reactive({\n    filtered_data_line &lt;- atla %&gt;%\n      filter(character %in% input$character_char,\n             if (\"All Directors\" %in% input$director_char) TRUE else director %in% input$director_char)\n    \n    palette_name &lt;- \"Set1\"\n    director_palette &lt;- brewer.pal(n = 10, name = palette_name)\n    \n    plot_line &lt;- ggplot(filtered_data_line %&gt;%\n                          mutate(Book = factor(Book, levels = c(\"Water\", \"Earth\", \"Fire\"))),\n                        aes(x = Episode, y = Lines))\n    validate(\n      need(nrow(filtered_data_line) &gt; 0, \"No data available for the selected filters.\"),\n      need(length(input$character_char) &lt;= 5, \"Please only select up to 10 characters.\")\n    )  \n    \n    if (length(input$character_char) == 1) {\n      plot_line &lt;- plot_line +\n        geom_point(aes(color = Book, text = paste(\"IMDB:\", IMDB, \"&lt;br&gt;\", \"Director:\", director))) +\n        scale_color_manual(values = book_colors, breaks = c(\"Water\", \"Earth\", \"Fire\"), limits = c(\"Water\", \"Earth\", \"Fire\")) +\n        geom_line(aes(color = Book))\n    } else {  \n      plot_line &lt;- plot_line +\n        geom_point(aes(color = character, text = paste(\"IMDB:\", IMDB, \"&lt;br&gt;\", \"Director:\", director))) +\n        scale_color_manual(values = character_palette) +  \n        geom_line(aes(color = character))\n    }\n    \n    plot_line &lt;- plot_line +\n      labs(x = \"Episode Number\",\n           y = \"Number of Lines\",\n           title = \"Number of Lines per Episode\",\n           color = if (length(input$character_char) == 1) \"Book (season)\" else \"Character\")+\n      coord_cartesian(xlim = c(0, max(filtered_data_line$Episode)), ylim = c(0, max(filtered_data_line$Lines))) + \n      scale_x_continuous(breaks = seq(0, 61, by = 10)) + \n      scale_y_continuous(breaks = seq(0, max(filtered_data_line$Lines), by = 10))\n    \n    \n    return(plot_line)\n  })\n  \nplot_data &lt;- reactive({\n  \n  filtered_data &lt;- atla %&gt;%\n    filter(if (\"All Directors\" %in% input$director_imdb) TRUE else director %in% input$director_imdb)\n  \n  validate(\n    need(nrow(filtered_data) &gt; 0, \"No data available for the selected filters.\"))\n\n  \n  palette_name &lt;- \"Set1\"\n  director_palette &lt;- brewer.pal(n = 10, name = palette_name)\n  \n  plot &lt;- ggplot(filtered_data %&gt;%\n                   mutate(Book = factor(Book, levels = c(\"Water\", \"Earth\", \"Fire\"))),\n                 aes(x = Episode, y = IMDB)) \n  \n  if (length(input$director_imdb) == 1) {\n    plot &lt;- plot +\n      geom_point(aes(color = Book,  text = paste(\"Director:\", director))) +\n      scale_color_manual(values = book_colors, breaks = c(\"Water\", \"Earth\", \"Fire\"), limits = c(\"Water\", \"Earth\", \"Fire\")) +\n      geom_line(aes(color = Book)) +\n      geom_smooth(aes(color = \"Smooth\"), size = 0.5, alpha = 0.2)\n  } else {  \n    plot &lt;- plot +\n      geom_point(aes(color = director, text = paste(\"Director:\", director))) +\n      scale_color_manual(values = director_palette) +  \n      geom_line(aes(color = director)) \n  }\n  \n  plot &lt;- plot +\n    labs(x = \"Episode Number\",\n         y = \"Episode IMDB Rating\",\n         title = \"IMDB Rating per Episode\",\n         color = if (length(input$director_imdb) == 1) \"Book (season)\" else \"Character\") +\n    coord_cartesian(xlim = c(0, max(filtered_data$Episode)), ylim = c(5, 10)) + \n    scale_x_continuous(breaks = seq(0, 61, by = 10)) + \n    scale_y_continuous(breaks = seq(5, 10, by = 1))\n  \n  return(plot)\n})\n\noutput$plot_char &lt;- renderPlotly({\n  plot_data_char_value &lt;- plot_data_char()\n  plotly::ggplotly(plot_data_char_value)\n})\n\noutput$plot_imdb &lt;- renderPlotly({\n  plot_data_value &lt;- plot_data()\n  plotly::ggplotly(plot_data_value)\n})\n}\n\nshinyApp(ui = ui, server = server)"
  },
  {
    "objectID": "presentation.html",
    "href": "presentation.html",
    "title": "Wan Shi Tong’s Library",
    "section": "",
    "text": "This project will utilize the appa package by Avery Robbins\nThis package includes a dataset containing the script, writers, directors, and IMDB ratings of every episode of the early 2000s animated TV show Avatar: The Last Airbender\nThe dataframe includes 13,385 rows and 12 variables\nThe data is organized by lines of the script with each row corresponding to one line (either spoken by a character or scene descriptions)\nThe show consists of 61 episodes and 3 books (seasons)"
  }
]