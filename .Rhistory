filtered_data <- atla %>%
filter(character == input$character,
if (input$director != "All Directors") director == input$director else TRUE)
# Create ggplot object
p <- ggplot(filtered_data, aes(x = ep, y = character_count)) +
geom_point() +
geom_line()
p <- ggplotly()
})
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
library(dplyr)
library(plotly)
library(readr)
atla <- read_csv("EXTRA/data/atla.csv")
# Define UI
ui <- fluidPage(
titlePanel("Avatar: The Last Airbender Character Count"),
sidebarLayout(
sidebarPanel(
selectInput("character", "Select Character", choices = unique(atla$character)),
selectInput("director", "Select Director", choices = c("All Directors", unique(atla$director))),
selectInput("season", "Select Season", choices = unique(atla$book)),
submitButton("Update Results!"),
),
mainPanel(
plotlyOutput("plot")
)
)
)
# Define server logic
server <- function(input, output) {
output$plot <- renderPlotly({
# Filter the data for Aang
filtered_data <- atla %>%
filter(character == input$character,
book == input$book_num,
if (input$director != "All Directors") director == input$director else TRUE)
# Create ggplot object
p <- ggplot(filtered_data, aes(x = ep, y = character_count)) +
geom_point() +
geom_line()
p <- ggplotly()
})
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
library(dplyr)
library(plotly)
library(readr)
atla <- read_csv("EXTRA/data/atla.csv")
# Define UI
ui <- fluidPage(
titlePanel("Avatar: The Last Airbender Character Count"),
sidebarLayout(
sidebarPanel(
selectInput("character", "Select Character", choices = unique(atla$character)),
selectInput("director", "Select Director", choices = c("All Directors", unique(atla$director))),
selectInput("season", "Select Season", choices = unique(atla$book)),
submitButton("Update Results!"),
),
mainPanel(
plotlyOutput("plot")
)
)
)
# Define server logic
server <- function(input, output) {
output$plot <- renderPlotly({
# Filter the data for Aang
filtered_data <- atla %>%
filter(character == input$character,
season == input$book_num,
if (input$director != "All Directors") director == input$director else TRUE)
# Create ggplot object
p <- ggplot(filtered_data, aes(x = ep, y = character_count)) +
geom_point() +
geom_line()
p <- ggplotly()
})
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
library(dplyr)
library(plotly)
library(readr)
atla <- read_csv("EXTRA/data/atla.csv")
# Define UI
ui <- fluidPage(
titlePanel("Avatar: The Last Airbender Character Count"),
sidebarLayout(
sidebarPanel(
selectInput("character", "Select Character", choices = unique(atla$character)),
selectInput("director", "Select Director", choices = c("All Directors", unique(atla$director))),
submitButton("Update Results!"),
),
mainPanel(
plotlyOutput("plot")
)
)
)
# Define server logic
server <- function(input, output) {
output$plot <- renderPlotly({
# Filter the data for Aang
filtered_data <- atla %>%
filter(character == input$character,
if (input$director != "All Directors") director == input$director else TRUE)
# Create ggplot object
p <- ggplot(filtered_data, aes(x = ep, y = character_count, color = book)) +
geom_point() +
geom_line()
p <- ggplotly()
})
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
library(dplyr)
library(plotly)
library(readr)
atla <- read_csv("EXTRA/data/atla.csv")
ui <- fluidPage(
titlePanel("Avatar: The Last Airbender Character Count"),
sidebarLayout(
sidebarPanel(
selectInput("character", "Select Character", choices = unique(atla$character)),
selectInput("director", "Select Director", choices = c("All Directors", unique(atla$director))),
submitButton("Update Results!"),
),
mainPanel(
plotlyOutput("plot")
)
)
)
server <- function(input, output) {
book_colors <- c("Water" = "#1f77b4",
"Earth" = "#2ca02c",
"Fire" = "#ad0000")
output$plot <- renderPlotly({
filtered_data <- atla %>%
filter(character == input$character,
if (input$director != "All Directors") director == input$director else TRUE)
p <- ggplot(filtered_data, aes(x = ep, y = character_count, color = book)) +
geom_point() +
geom_line()
p <- ggplotly()
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
library(dplyr)
library(plotly)
library(readr)
atla <- read_csv("EXTRA/data/atla.csv")
ui <- fluidPage(
titlePanel("Avatar: The Last Airbender Character Count"),
sidebarLayout(
sidebarPanel(
selectInput("character", "Select Character", choices = unique(atla$character)),
selectInput("director", "Select Director", choices = c("All Directors", unique(atla$director))),
submitButton("Update Results!"),
),
mainPanel(
plotlyOutput("plot")
)
)
)
server <- function(input, output) {
book_colors <- c("Water" = "#1f77b4",
"Earth" = "#2ca02c",
"Fire" = "#ad0000")
output$plot <- renderPlotly({
filtered_data <- atla %>%
filter(character == input$character,
if (input$director != "All Directors") director == input$director else TRUE)
p <- ggplot(filtered_data, aes(x = ep, y = character_count, color = book_colors)) +
geom_point() +
geom_line()
p <- ggplotly()
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
library(dplyr)
library(plotly)
library(readr)
atla <- read_csv("EXTRA/data/atla.csv")
ui <- fluidPage(
titlePanel("Avatar: The Last Airbender Character Count"),
sidebarLayout(
sidebarPanel(
selectInput("character", "Select Character", choices = unique(atla$character)),
selectInput("director", "Select Director", choices = c("All Directors", unique(atla$director))),
submitButton("Update Results!"),
),
mainPanel(
plotlyOutput("plot")
)
)
)
server <- function(input, output) {
book_colors <- c("Water" = "#1f77b4",
"Earth" = "#2ca02c",
"Fire" = "#ad0000")
output$plot <- renderPlotly({
filtered_data <- atla %>%
filter(character == input$character,
if (input$director != "All Directors") director == input$director else TRUE)
p <- ggplot(filtered_data, aes(x = ep, y = character_count, color = book_colors)) +
geom_point() +
geom_line()
p <- ggplotly()
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
library(dplyr)
library(plotly)
library(readr)
atla <- read_csv("EXTRA/data/atla.csv")
ui <- fluidPage(
titlePanel("Avatar: The Last Airbender Character Count"),
sidebarLayout(
sidebarPanel(
selectInput("character", "Select Character", choices = unique(atla$character)),
selectInput("director", "Select Director", choices = c("All Directors", unique(atla$director))),
submitButton("Update Results!"),
),
mainPanel(
plotlyOutput("plot")
)
)
)
server <- function(input, output) {
book_colors <- c("Water" = "#1f77b4",
"Earth" = "#2ca02c",
"Fire" = "#ad0000")
output$plot <- renderPlotly({
filtered_data <- atla %>%
filter(character == input$character,
if (input$director != "All Directors") director == input$director else TRUE)
p <- ggplot(filtered_data, aes(x = ep, y = character_count, color = book)) +
geom_point() +
geom_line() +
scale_color_manual(values = book_colors)
p <- ggplotly()
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
library(dplyr)
library(plotly)
library(readr)
atla <- read_csv("EXTRA/data/atla.csv")
ui <- fluidPage(
titlePanel("Avatar: The Last Airbender Character Count"),
sidebarLayout(
sidebarPanel(
selectInput("character", "Select Character", choices = unique(atla$character), multiple = TRUE),
selectInput("director", "Select Director", choices = c("All Directors", unique(atla$director))),
submitButton("Update Results!"),
),
mainPanel(
plotlyOutput("plot")
)
)
)
server <- function(input, output) {
book_colors <- c("Water" = "#1f77b4",
"Earth" = "#2ca02c",
"Fire" = "#ad0000")
output$plot <- renderPlotly({
filtered_data <- atla %>%
filter(character == input$character,
if (input$director != "All Directors") director == input$director else TRUE)
p <- ggplot(filtered_data, aes(x = ep, y = character_count, color = book)) +
geom_point() +
geom_line() +
scale_color_manual(values = book_colors)
p <- ggplotly()
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
library(dplyr)
library(plotly)
library(readr)
atla <- read_csv("EXTRA/data/atla.csv")
ui <- fluidPage(
titlePanel("Avatar: The Last Airbender Character Count"),
sidebarLayout(
sidebarPanel(
selectInput(inputId = "character",
label = "Select Character(s)",
choices = NULL,
multiple = TRUE),
selectInput("director", "Select Director", choices = c("All Directors", unique(atla$director))),
submitButton("Update Results!"),
),
mainPanel(
plotlyOutput("plot")
)
)
)
server <- function(input, output) {
book_colors <- c("Water" = "#1f77b4",
"Earth" = "#2ca02c",
"Fire" = "#ad0000")
output$plot <- renderPlotly({
filtered_data <- atla %>%
filter(character == input$character,
if (input$director != "All Directors") director == input$director else TRUE)
p <- ggplot(filtered_data, aes(x = ep, y = character_count, color = book)) +
geom_point() +
geom_line() +
scale_color_manual(values = book_colors)
p <- ggplotly()
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
library(dplyr)
library(plotly)
library(readr)
atla <- read_csv("EXTRA/data/atla.csv")
ui <- fluidPage(
titlePanel("Avatar: The Last Airbender Character Count"),
sidebarLayout(
sidebarPanel(
selectInput("character", "Select Character", choices = unique(atla$character), multiple = TRUE),
selectInput("director", "Select Director", choices = c("All Directors", unique(atla$director))),
submitButton("Update Results!"),
),
mainPanel(
plotlyOutput("plot")
)
)
)
server <- function(input, output) {
book_colors <- c("Water" = "#1f77b4",
"Earth" = "#2ca02c",
"Fire" = "#ad0000")
output$plot <- renderPlotly({
filtered_data <- atla %>%
filter(character %in% input$character,
if (input$director != "All Directors") director == input$director else TRUE)
p <- ggplot(filtered_data, aes(x = ep, y = character_count, color = book)) +
geom_point() +
geom_line() +
scale_color_manual(values = book_colors)
p <- ggplotly()
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
library(dplyr)
library(plotly)
library(readr)
atla <- read_csv("EXTRA/data/atla.csv")
ui <- fluidPage(
titlePanel("Avatar: The Last Airbender Character Count"),
sidebarLayout(
sidebarPanel(
selectInput("character", "Select Character", choices = unique(atla$character), multiple = TRUE),
selectInput("director", "Select Director", choices = c("All Directors", unique(atla$director))),
submitButton("Update Results!"),
),
mainPanel(
plotlyOutput("plot")
)
)
)
server <- function(input, output) {
book_colors <- c("Water" = "#1f77b4",
"Earth" = "#2ca02c",
"Fire" = "#ad0000")
output$plot <- renderPlotly({
filtered_data <- atla %>%
filter(character %in% input$character,
if (input$director != "All Directors") director == input$director else TRUE)
p <- ggplot(filtered_data, aes(x = ep, y = character_count, color = book)) +
geom_point() +
geom_line() +
scale_color_manual(values = book_colors)
ggplotly(p)
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
library(dplyr)
library(plotly)
library(readr)
atla <- read_csv("EXTRA/data/atla.csv")
ui <- fluidPage(
titlePanel("Avatar: The Last Airbender Character Count"),
sidebarLayout(
sidebarPanel(
selectInput("character", "Select Character", choices = unique(atla$character), multiple = TRUE),
selectInput("director", "Select Director", choices = c("All Directors", unique(atla$director))),
submitButton("Update Results!"),
),
mainPanel(
plotlyOutput("plot")
)
)
)
server <- function(input, output) {
book_colors <- c("Water" = "#1f77b4",
"Earth" = "#2ca02c",
"Fire" = "#ad0000")
output$plot <- renderPlotly({
filtered_data <- atla %>%
filter(character %in% input$character,
if (input$director != "All Directors") director == input$director else TRUE)
p <- ggplot(filtered_data, aes(x = ep, y = character_count, color = book)) +
geom_point() +
geom_line() +
scale_color_manual(values = book_colors)
ggplotly(p)
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
library(dplyr)
library(plotly)
library(readr)
atla <- read_csv("EXTRA/data/atla.csv")
ui <- fluidPage(
titlePanel("Avatar: The Last Airbender Character Count"),
sidebarLayout(
sidebarPanel(
selectInput("character", "Select Character", choices = unique(atla$character)),
selectInput("director", "Select Director", choices = c("All Directors", unique(atla$director))),
submitButton("Update Results!"),
),
mainPanel(
plotlyOutput("plot")
)
)
)
server <- function(input, output) {
book_colors <- c("Water" = "#1f77b4",
"Earth" = "#2ca02c",
"Fire" = "#ad0000")
output$plot <- renderPlotly({
filtered_data <- atla %>%
filter(character == input$character,
if (input$director != "All Directors") director == input$director else TRUE)
p <- ggplot(filtered_data, aes(x = ep, y = character_count, color = book)) +
geom_point() +
geom_line() +
scale_color_manual(values = book_colors)
p <- ggplotly()
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
library(dplyr)
library(plotly)
library(readr)
atla <- read_csv("EXTRA/data/atla.csv")
ui <- fluidPage(
titlePanel("Avatar: The Last Airbender Character Count"),
sidebarLayout(
sidebarPanel(
selectInput("character", "Select Character", choices = unique(atla$character), multiple = TRUE),
selectInput("director", "Select Director", choices = c("All Directors", unique(atla$director))),
submitButton("Update Results!"),
),
mainPanel(
plotlyOutput("plot")
)
)
)
server <- function(input, output) {
book_colors <- c("Water" = "#1f77b4",
"Earth" = "#2ca02c",
"Fire" = "#ad0000")
output$plot <- renderPlotly({
# Filter the data for the selected characters and director
filtered_data <- atla %>%
filter(character %in% input$character,
if (input$director != "All Directors") director == input$director else TRUE)
# Create ggplot object
p <- ggplot(filtered_data, aes(x = ep, y = character_count, color = book)) +
geom_point() +
geom_line() +
scale_color_manual(values = book_colors)
# Convert ggplot to plotly
ggplotly(p)
})
}
shinyApp(ui = ui, server = server)
